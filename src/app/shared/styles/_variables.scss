/* Variables */
@use '@angular/material' as mat;

@include mat.core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$roma-primary: mat.define-palette(mat.$green-palette);
$roma-icons-primary: mat.define-palette(mat.$indigo-palette, A200);
$roma-accent: mat.define-palette(mat.$orange-palette, A200, A100, A400);

// The warn palette is optional (defaults to red).
$roma-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$roma-theme: mat.define-light-theme((
  color: (
    primary: $roma-primary,
    accent: $roma-accent,
    warn: $roma-warn,
  ),
  typography: mat.define-typography-config(),
  density: 0
));

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
/* Export a mixin to include theme styles */
@mixin roma-theme-styles() {
  @include mat.all-component-themes($roma-theme);
}

/* Retrieve colors from palettes */
$primary-color: mat.get-color-from-palette($roma-primary, 500);
$secondary-color: mat.get-color-from-palette($roma-accent, A200);
$warn-color: mat.get-color-from-palette($roma-warn, 500);
$text-color: mat.get-color-from-palette($roma-primary, default-contrast);

$icon-primary: mat.get-color-from-palette($roma-icons-primary, A200);

$sidebar-background: #6b6d56;
$icon-color: #fff;
$background-color: #f5f5f5;
